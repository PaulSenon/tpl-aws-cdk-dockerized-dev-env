# Declare build argument with default value
ARG NODE_VERSION

FROM --platform=$BUILDPLATFORM node:${NODE_VERSION}-slim

WORKDIR /app/infrastructure

# Install basic dev tools
RUN apt-get update && \
    apt-get install -y \
    git \
    make \
    curl \
    unzip \
    python3 \
    python3-pip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install AWS CLI v2
RUN if [ "$(uname -m)" = "x86_64" ]; then \
    url="https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"; \
    elif [ "$(uname -m)" = "aarch64" ]; then \
    url="https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip"; \
    else \
    echo "Unsupported architecture"; exit 1; \
    fi && \
    curl "$url" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \
    rm -rf aws awscliv2.zip

# Install AWS CDK CLI globally 
RUN npm install -g aws-cdk corepack

# Don't fail if package.json doesn't exist, but copy it if it does
COPY package.json* ./

# Enable corepack (but don't prepare any package manager yet)
# if jq -e '.packageManager' package.json > /dev/null 2>&1; then \
RUN corepack enable && \
    if [ -f "package.json" ]; then \
    corepack prepare --activate; \
    else \
    echo "No package.json found, will be created during bootstrap"; \
    fi

CMD ["bash"] 